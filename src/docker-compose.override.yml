 

services:
  catalogdb:
    container_name: catalogdb
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
 
  basketdb:
    container_name: basketdb
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
  
  discountdb:
    container_name: discountdb
    image: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=discountdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:  # این خط را درست کردیم
      - backend

  
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always 
    ports:
      - "5050:80"   
    volumes:
      - pgadmin_data:/root/.pgadmin



  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    ports:
      - "8000:8000" 
      - "9000:9000" 
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /portainer_data:/data 

  catalog.api:
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Catalog.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - "7000:8080"
  
  
       

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - basketdb
    ports:
      - "7001:8080"

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Server=discountdb;Port=5432;Database=discountdb;User Id=admin;Password=admin1234
    depends_on:
      - discountdb
    ports:
      - "7002:8080"
    networks:  # این خط را درست کردیم
      - backend
    


volumes:
  mongo_data:
  postgres_data:
networks:
  backend:

