 services:
  catalogdb:
    image: mongo

  basketdb:
    image: redis:alpine
  
  OrderDb:
     image: mcr.microsoft.com/mssql/server:2017-latest

  discountdb:
    image: postgres
    environment:
      POSTGRES_DB: discountdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d discountdb"]
      interval: 10s
      timeout: 5s
      retries: 5
 
     
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4

  portainer:
    image: portainer/portainer-ce

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Catalog.Api/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.Api/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.api/Dockerfile
    depends_on:
       discountdb:
        condition: service_healthy


  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering.Api/Ordering.Api/Dockerfile

 volumes:
  mongo_data:
  portainer_data:
  postgres_data:  
  pgadmin_data:


